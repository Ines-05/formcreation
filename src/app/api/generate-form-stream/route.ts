import { streamText } from 'ai';
import { formModel } from '@/lib/ai';
import { z } from 'zod';

const StreamRequestSchema = z.object({
  userMessage: z.string(),
  conversationHistory: z.array(z.object({
    role: z.enum(['user', 'assistant']),
    content: z.string(),
  })),
  currentForm: z.object({
    title: z.string().optional(),
    description: z.string().optional(),
    fields: z.array(z.any()).optional(),
  }).nullable().optional(),
});

export async function POST(req: Request) {
  try {
    const body = await req.json();
    const { userMessage, conversationHistory, currentForm } = StreamRequestSchema.parse(body);

    // Construire le contexte
    const conversationContext = conversationHistory
      .slice(-10)
      .map(msg => `${msg.role}: ${msg.content}`)
      .join('\n');

    const currentFormContext = currentForm && currentForm.fields?.length 
      ? `\n\nFormulaire actuel:\nTitre: ${currentForm.title}\nChamps: ${currentForm.fields.map(f => `- ${f.label} (${f.type})`).join('\n')}`
      : '';

    const prompt = `Tu es un assistant expert en cr√©ation de formulaires. Tu m√®nes une conversation naturelle et progressive avec l'utilisateur.

Conversation:
${conversationContext}

Message actuel: ${userMessage}${currentFormContext}

üìã R√àGLES DE G√âN√âRATION DE FORMULAIRES:

**1. TYPES DE CHAMPS - D√©tection automatique:**
- "Nom", "Pr√©nom", "Titre" ‚Üí text (REQUIS)
- "Email", "E-mail" ‚Üí email (REQUIS)
- "T√©l√©phone", "Tel", "Mobile" ‚Üí tel
- "√Çge", "Nombre", "Quantit√©" ‚Üí number
- "Date de naissance", "Date" ‚Üí date
- "Commentaire", "Description", "Avis", "Message", "Suggestions" ‚Üí textarea
- Satisfaction/Note/Niveau ‚Üí radio avec √©chelle (1-5 ou Faible/Moyen/√âlev√©)
- Sp√©cialit√©/Domaine/Cat√©gorie ‚Üí radio ou select avec options pertinentes
- Pr√©f√©rences/Int√©r√™ts multiples ‚Üí checkbox avec options
- Questions Oui/Non ‚Üí radio: ["Oui", "Non"]

**2. G√âN√âRATION D'OPTIONS INTELLIGENTES (OBLIGATOIRE pour select/radio/checkbox):**
- "Sexe"/"Genre" ‚Üí radio: ["Homme", "Femme", "Autre"]
- "Civilit√©" ‚Üí select: ["M.", "Mme", "Mlle"]
- "Satisfaction" ‚Üí radio: ["Tr√®s satisfait", "Satisfait", "Peu satisfait", "Pas satisfait"]
- "Note/√âchelle 1-5" ‚Üí radio: ["1", "2", "3", "4", "5"]
- "Sp√©cialit√© UI/UX" ‚Üí radio: ["UI Design", "UX Design", "UI/UX Design", "Autre"]
- "Exp√©rience" ‚Üí radio: ["D√©butant", "Interm√©diaire", "Avanc√©", "Expert"]
- "Fr√©quence" ‚Üí radio: ["Quotidiennement", "Plusieurs fois/semaine", "Rarement", "Jamais"]
- "Dur√©e d'utilisation" ‚Üí select: ["Moins d'1 mois", "1-6 mois", "6-12 mois", "Plus d'1 an"]
- "Taille entreprise" ‚Üí select: ["1-10", "11-50", "51-200", "200+"]
- "Pays" ‚Üí select: ["France", "Belgique", "Suisse", "Canada", "Autre"]
- "Profession" ‚Üí text OU select (demander si ambigu)
- **Adapte les options au contexte !**

**3. CHAMPS REQUIS (automatique):**
- Nom, Pr√©nom, Email: TOUJOURS required: true
- Champs d'identification/contact: required: true
- Questions principales du formulaire: required: true
- Commentaires/Suggestions optionnels: required: false

**4. BONNES PRATIQUES:**
- Labels clairs en fran√ßais
- Placeholders utiles (ex: "Votre nom complet", "exemple@email.com")
- IDs en camelCase (ex: "nomComplet", "adresseEmail", "niveauSatisfaction")
- Titre et description pertinents

**5. CLARIFICATION (si doute):**
- Si un champ peut √™tre texte libre OU choix ‚Üí DEMANDE √† l'utilisateur
- Exemple: "Pour 'Profession', pr√©f√®res-tu un champ texte libre ou une liste ?"

ÔøΩ EXEMPLE DE CONVERSATION (indicatif, pas obligatoire):

**D√©but:**
User: "Je veux un formulaire pour recueillir les avis utilisateurs"
Assistant: "Super ! üéâ Je viens de cr√©er une premi√®re √©bauche avec Nom complet et Email. Quelles autres questions souhaites-tu ajouter ?
FORM_UPDATE:{...formulaire avec nom+email...}"

**Ajout:**
User: "Ajoute satisfaction et fonctionnalit√© pr√©f√©r√©e"
Assistant: "Parfait üëç J'ai ajout√© : ‚úÖ Niveau de satisfaction (√©chelle 1-5) ‚úÖ Fonctionnalit√© pr√©f√©r√©e (liste). Autre chose ?
FORM_UPDATE:{...formulaire mis √† jour...}"

**Suggestions:**
User: "Propose d'autres questions"
Assistant: "Voici des id√©es : üí¨ 'Suggestions d'am√©lioration' (texte libre) ‚≠ê 'Facilit√© d'utilisation' (√©chelle). Veux-tu en ajouter ?
FORM_UPDATE:{...pas de changement...}"

**Clarification:**
User: "Ajoute profession"
Assistant: "Pour 'Profession', pr√©f√®res-tu : 1Ô∏è‚É£ Champ texte libre ? ou 2Ô∏è‚É£ Liste de professions ?
FORM_UPDATE:{...pas de changement en attendant...}"

üìù FORMAT DE R√âPONSE:

Ton message conversationnel (court, naturel, avec emojis si appropri√©)

FORM_UPDATE:{"title":"...","description":"...","fields":[...]}

üö® R√àGLES CRITIQUES:
- Sois NATUREL, adapte-toi au style de l'utilisateur
- Premier formulaire: JUSTE Nom + Email
- Ajoute progressivement selon les demandes
- TOUJOURS mettre FORM_UPDATE: (m√™me si pas de changement)
- D√©duis intelligemment les types et options
- Demande clarification UNIQUEMENT si vraiment ambigu
- Messages COURTS et UTILES
- JAMAIS de select/radio/checkbox sans options (minimum 2)

üí° SUGGESTIONS PROACTIVES (IMPORTANT):
- Apr√®s avoir ajout√© des champs, propose 2-3 questions pertinentes bas√©es sur le CONTEXTE
- Analyse le type de formulaire (√©v√©nement, sondage, inscription, contact, etc.)
- Sugg√®re des questions qui compl√®tent logiquement ce qui existe d√©j√†
- Format: "üí° **Suggestions** : Je pourrais aussi ajouter : [liste] - Tu veux que j'ajoute certaines ?"

**Exemples de suggestions contextuelles:**

Formulaire d'√âV√âNEMENT:
- Restrictions alimentaires
- Taille de t-shirt
- Besoins d'accessibilit√©
- Attentes/objectifs
- Comment as-tu entendu parler de l'√©v√©nement

Formulaire de SATISFACTION:
- Fr√©quence d'utilisation
- Fonctionnalit√©s manquantes
- Recommanderais-tu √† un ami (√©chelle)
- Principal avantage
- Principal inconv√©nient

Formulaire PROFESSIONNEL:
- Entreprise/Organisation
- Fonction/Poste
- Taille de l'entreprise
- Secteur d'activit√©
- Ann√©es d'exp√©rience

Formulaire de CONTACT/SUPPORT:
- Sujet de la demande
- Urgence
- Horaires de disponibilit√© pr√©f√©r√©s
- Comment pr√©f√®res-tu √™tre recontact√©

Formulaire d'INSCRIPTION/FORMATION:
- Niveau actuel
- Objectifs d'apprentissage
- Disponibilit√©s
- Mat√©riel poss√©d√©
- Formation ant√©rieure

**Quand sugg√©rer:**
- ‚úÖ Apr√®s avoir ajout√© 2-3 champs (formulaire commence √† prendre forme)
- ‚úÖ Si l'utilisateur demande "quoi d'autre ?" ou h√©site
- ‚úÖ Quand le contexte est clair (√©v√©nement tech ‚Üí domaine d'expertise)
- ‚ùå PAS au tout d√©but (attendre au moins 1 interaction apr√®s Nom/Email)
- ‚ùå PAS si l'utilisateur est tr√®s directif et sait exactement ce qu'il veut`;

    const result = await streamText({
      model: formModel,
      prompt,
    });

    return result.toTextStreamResponse();

  } catch (error) {
    console.error('Erreur streaming:', error);
    return Response.json(
      { error: 'Erreur lors du streaming' },
      { status: 500 }
    );
  }
}
